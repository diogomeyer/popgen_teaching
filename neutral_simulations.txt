#######################################################
#	Author: Bárbara Bitarello
#
#
#	Last modified: 01.04.2015
########################################################


#A few examples with MS

#We will try to simulate a population compatible with what we know from human demographic history.


#Example 1: simulating a human population of constant size.

#human long-term effective population size=10,000
#human per site neutral mutation rate = 1.10e-08
#we want a sample of 50 individuals (remember we are diploids)
#we want 10,000 replicates (sounds like a lot, but remember, MS is very fast!)

#the command line should be:

ms nsam nreps -t theta > example1.out

#theta=4*N*mu, where N is the diploid effective pop size and mu is the mutation rate per locus
#Human average gene length is between 10-15 kb, so let's assume 10Kb

#Calculate theta and run the above command


#now let's have a look at the output


#type:


less -S example1.out

(use enter to keep moving)



##Questions:

#1) Collect the values of S (number of segregating sites), Pi (nucloeotide diversity) and Tajima's D.

#Hint: use sample_stats, which is installed in the same directory as ms.

#Hint 2: we will pipe the output of ms to produce the input for sample_stats, like this

ms nsam nreps -t theta | sample_stats|less -S #first have a look at the output using less


ms nsam nreps -t theta | sample_stats | cut -f 2,4,6,8,10 > example1.stats.txt #produce a file with the output file

#Hint 3: start an R session and type

read.table('example1.stats.txt') -> ex1
colnames(ex1)<-c('pi', 'ss', 'D', 'thetaH', 'H')

#plot Pi histogram and the expectation (mean)
hist(ex1$pi, nclass=100, main='Constant population size', xlab='Pi')
abline(col='orange', lty=2,v=mean(ex1$pi), lwd=2)
#note that the mean is very close to 4.4, which was the theta parameter we simulated.
#you can check by typing

mean(ex1$pi)


#now let's see 'ss' (segragating sites)


hist(ex1$ss, nclass=100, main='Constant population size')
abline(col='orange', lty=2,v=mean(ex1$ss), lwd=2)


#again, you can check the actual mean by typing:

mean(ex1$ss)


#finally, tajima's D


hist(ex1$D, nclass=100, main='Constant population size')
abline(col='orange', lty=2,v=mean(ex1$D), lwd=2)
#essentially zero, as expected for sequences evolving under neutrality.


#Now let's see what happens when we complicate the demographic model a bit.


########################################################################################
########################################################################################

#In reality, human demography is well studied, and we can make these simulations a bit more realistic.

#Example 2: human population with exponential growth happening since 148,000 years ago.
#(in reality, exponential is not the best way to describe it, but it is simpler to simulate)

#We need additional parameter now. We will run the following command

ms nsam nreps -t θ -G α 

#The -t swithc  is for theta (as in example 1), and the -G swithc is for growth. Now we have to give a growth rate alpha.

#here are the more accurate Ne values used for human demographic models.

#Current N (the one used for scalling): 14,474
#Past N: 7,310
#Remember from the slides that if we consider a generation time of 20 years for Homo sapiens, and that the current N for HS is 14474

#We would have X number of generations == 148,000 years

#Next, we divide that number of generations by (4*N) so we have this time in units of 4N.


#So t= (number of years/generation time)/(4*No), where No is always the current population size.

#See if you can reach this value of t=1.278154

Now that we have the time since the pop growth began, we can calculate the rate of growth using an exponential growth equation.
See if you can reach the alpha value of alpha= 0.5345188

emember to recalculate alpha with this N we provided (14,474), reaching the value of  6.36856


Now we can run the command line (finally!)


ms 100 10000 -t  6.36856 -G  0.5345188 |sample_stats|cut -f 2,4,6,8,10 > example2.stats.txt  #notice theta changed from 4.4 to 6.37, because we have changed the pop size from 10,000 to 14474



#repeat the exercises in R for example 2.

#simply replace ex1 for ex2 and change the plot name from ' constant population size' to 'exponential growth'



#compare results

#remember you already have ex1 in your R session, so you can re-plot and compare both.


read.table('example2.stats.txt') -> ex2
colnames(ex2)<-c('pi', 'ss', 'D', 'thetaH', 'H')

#plot Pi histogram and the expectation (mean)
hist(ex2$pi, nclass=100, main='Exponential growth', xlab='Pi')
abline(col='orange', lty=2,v=mean(ex2$pi), lwd=2)
#note that the mean is very close to 5, which is  LOWER than the theta parameter we simulated.
#you can check by typing

mean(ex2$pi)


#now let's see 'ss' (segragating sites)


hist(ex2$ss, nclass=100, main='Exponential growth')
abline(col='orange', lty=2,v=mean(ex2$ss), lwd=2)


#compare segregating sites for both examples. Type

par(mfrow=c(2,1))

hist(ex1$ss, nclass=100, main='Constant')
abline(col='orange', lty=2,v=mean(ex1$ss), lwd=2)
hist(ex2$ss, nclass=100, main='Exponential')
abline(col='orange', lty=2,v=mean(ex2$ss), lwd=2)

#again, you can check the actual mean by typing:

mean(ex2$ss)


#it is expected that we shoudl have more SS here, because the theta parameter is increased in relation to example 1.
#finally, tajima's D


hist(ex2$D, nclass=100, main='Exponential growth')
abline(col='orange', lty=2,v=mean(ex2$D), lwd=2)
#below zero, as expected for sequences with defficiency of Pi in relation to SS.
#compare

mean(ex1$D)
mean(ex2$D)
#of course this is not a formal comparison, but we can already see that there is a difference.

################################################################################################




