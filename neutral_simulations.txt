########################################################################################
#	Author: BÃ¡rbara Bitarello
#
# Description:Script for day 2 of popgen course. Some 'ms' commands and R commands
#             for reading in results from simulations and making histograms.
# 
#	Last modified: 06.04.2015
########################################################################################

####################################
####################################
#PART I ############################
#MS: Basic syntax#############
####################################
####################################


#1)In the server, type

cd /home/BIO5789/<your_user_name>/

#eg. /home/BIO5789/ouvinte1

#2) now, type

ms 5 1 -t 2

#and

ms 5 1 -t 10
#check the outputs.Each '//' limits the output from a replicate (in this case only 1) and each row of 0s and 1s represents one of the 5 sequences we are
#simulating.

#in the second case, we see that the number of segregating sites is higher than in the first. Why?

#Answer: the '-t' indicates that what comes after that is the theta parameter (4Nu). The higher theta, the higher the number of mutations
#happening along the genealogy.

#3) now try the same command as in 2, but replacing '1' with 3

ms 5 3 -t 10  #now we have three replicates.

#PS: 'ms' is a very fast program, so with a model this simple, we can increase the number of replicates A LOT and will still run fast.


################################################################################################
################################################################################################
#Part II #######################################################################################
#RUNNNING SIMULATIONS FOLLOWING A HUMAN DMOGRAPHIC MODEL #######################################
################################################################################################
################################################################################################

#Note: although the parameters we use from here on are widely used by those who simulate human 
#sequences, we are simplifying a lot. In reality, one could simulate subpopulations, population
#structure, migration between subpopulations and recombination. For our purposes, however, we 
#will assume there is no substructure between subpopulation (we will simulate only one) and no 
#recombination.

#Task: try to simulate a population compatible with what we know from human demographic history,
#and check the estimates for Tajima's D, SS (number os segregating sites) and pi (nucleotide diversity).
#we will do this for
#a) a 'human' population evolving without change in population size
#b) with a ~2-fold increase in size ~148,000 years ago (based on real data)
#b.1-b5) we will see what would happen if this increase in size had occured at other points in time.


#############################################################
#Example 1: simulating a human population of constant size.##
#############################################################


#Background info:

#human long-term effective population size=10,000
#human per site neutral mutation rate = 2.5.10e-08
#we want 10,000 replicates (sounds like a lot, but remember, MS is very fast!)
#theta=4*N*u, where N is the diploid effective pop size and u is the mutation rate per locus
#human average gene has something between 10-15 kb, so let's go with 10Kb
#u=mutation rate per site * L
#first, calculate theta.

#theta=10

#copy and paste into terminal

ms 5 10 -t 2|less -S #
ms 5 10 -t 10|less -S # increases Nr. segregating sites

#now,use 10000 repliacates and 50 individuals (100 chromosomes)

ms 100 1000 -t 10|less -S
(use enter to keep moving)

#now let's learn to use sample_stats

ms 100 1000 -t 10|sample_stats|less

#now, save the output
ms 100 1000 -t 10|sample_stats|cut -f 2,4,6 > example1.stats.out

less -S example1.stats.out #check out the output again
#in this file we have a set of statistics we will look into later.

###########################################
###########################################

#As mentioned, in reality, human demography is well studied, and we can make these simulations a bit more realistic.

#going back to the slide presented before, we could model the human population including an expansion in Ne.

#Current N (the one used for scaling): 14,474
#N before expansion: 7,310
#let's consider the generation time for Homo sapiens as 20 years.


#Example 2: human population with population expansion at 148,000 years ago.
#at this point in time, the population size increases according to what was presented above.
#we will need to calculate more parameters now in order to model the growth.

#First: in MS, time is measured in units of 4N generations.
#Ex. say generation time is 20 years, and that something happened 1000 years ago. 1000/20=50, 
#so it was 50 generations ago, or 50/(4N) units of time.


#So time= (number of years/generation time)/(4*No), where No is always the current population size.
#growth parameter = (Past N/current N)/(4*N)= 8.723289e-06

#so, first calculate the time at which the population expansion occured (148,000 years ago) in units of 4N generations. 
#set the growth parameter also in terms of 4. For instance, if current pop size is 20,000 and the past pop size was 148000/20=7,400 generations.
#Now divide that by 4*N and you have the growth parameter in terms of 4N units. 7400/4*14474= 0.1278154


#so the command should be like this

ms nsam nreps -t theta -eN time_of_growth growth_parameter |sample_stats|cut -f 2,4,6 > example2.stats.out

#which with the actual values is:

ms 100 1000 -t 14.4 -eN 0.1278154 8.723289e-06|less

#now, run:

ms 100 1000 -t 14.4 -eN 0.1278154 8.723289e-06||sample_stats|cut -f 2,4,6 > example2.stats.out


#########################
#########################
#Now let's run the same command with expansion happening at times=0.01, 0.05,0.5, 1 and 4
#This is a way of looking at what happens immediately after an expansion (t=0.001), or a long time after (t=10)


ms 100 1000 -t 14.4 -eN 0.01 8.723289e-06|sample_stats|cut -f 2,4,6 > example2_t0.01.stats.out
ms 100 1000 -t 14.4 -eN 0.05 8.723289e-06|sample_stats|cut -f 2,4,6 > example2_t0.05.stats.out
ms 100 1000 -t 14.4 -eN 0.5 8.723289e-06|sample_stats|cut -f 2,4,6 > example2_t0.5.stats.out
ms 100 1000 -t 14.4 -eN 1 8.723289e-06|sample_stats|cut -f 2,4,6 > example2_t1.stats.out
ms 100 1000 -t 14.4 -eN 4 8.723289e-06|sample_stats|cut -f 2,4,6 > example2_t4.stats.out


###############################################################################################

#Copying files to local machine:

#Open Filezilla


#host is lem.ib.usp.br

#user name

#password

#port 22

#find the files you generated and copy to a local folder in your computer. (suggestion 'aula_2' in your home folder.)

#open R studio

################################################################################################
##Questions:

#1) Collect the values of S (number of segregating sites), Pi (nucloeotide diversity) and Tajima's D for all sets of simulations


2)Start an R session and type:

read.table('~/example1.stats.txt') -> ex1

read.table('example2.stats.txt') -> ex2

read.table('example3.stats.txt') -> ex3

colnames(ex1)<-c('pi', 'ss', 'D')

colnames(ex2)<-c('pi', 'ss', 'D')
colnames(ex2)<-c('pi', 'ss', 'D')
#plot Pi histogram and the expectation (mean)
hist(ex1$pi, nclass=100, main='Constant population size', xlab='Pi')
abline(col='orange', lty=2,v=mean(ex1$pi), lwd=2)
#note that the mean is very close to 14.474, which was the theta parameter we simulated.
#you can check by typing

mean(ex1$pi)


#now let's see 'ss' (segregating sites)


hist(ex1$ss, nclass=100, main='Constant population size')
abline(col='orange', lty=2,v=mean(ex1$ss), lwd=2)


#again, you can check the actual mean by typing:

mean(ex1$ss)


#finally, tajima's D


hist(ex1$D, nclass=100, main='Constant population size')
abline(col='orange', lty=2,v=mean(ex1$D), lwd=2)
#essentially zero, as expected for sequences evolving under neutrality.


##3)compare these results with examples 2 and 3
#remember you already have ex1 in your R session, so you can re-plot and compare both.



#plot Pi histogram and the expectation (mean)
hist(ex2$pi, nclass=100, main='Growth', xlab='Pi')
abline(col='orange', lty=2,v=mean(ex2$pi), lwd=2)
#note that the mean is very close to 5, which is  LOWER than the theta parameter we simulated.
#you can check by typing

mean(ex2$pi)


#now let's see 'ss' (segragating sites)


hist(ex2$ss, nclass=10, main='Growth')
abline(col='orange', lty=2,v=mean(ex2$ss), lwd=2)


#compare segregating sites for both examples. Type

par(mfrow=c(2,1))

hist(ex1$ss, nclass=10, main='Constant')
abline(col='orange', lty=2,v=mean(ex1$ss), lwd=2)
hist(ex2$ss, nclass=10, main='Growth')
abline(col='orange', lty=2,v=mean(ex2$ss), lwd=2)

#again, you can check the actual mean by typing:

mean(ex2$ss)


#it is expected that we shoudl have more SS here, because the theta parameter is increased in relation to example 1.
#finally, tajima's D


hist(ex2$D, nclass=100, main='Growth')
abline(col='orange', lty=2,v=mean(ex2$D), lwd=2)
#below zero, as expected for sequences with defficiency of Pi in relation to SS.
#compare

hist(ex2$D, nclass=100, main='Growth')
abline(col='orange', lty=2,v=mean(ex2$D), lwd=2)
#below zero, as expected for sequences with defficiency of Pi in relation to SS.
#compare




mean(ex1$D)
mean(ex2$D)
mean(ex3$D)
#of course this is not a formal comparison, but we can already see that there is a difference.

################################################################################################









#Example 3: a population suffering a bottleneck

Let's assume that this 'human' population suffered a bottleneck 51,000 years ago, going from 14474 to 1861. 
#Hint, theta will change, and the Ne for scaling now will be 1861. Remember this makes no difference in the results, what is used for scaling, as long
#as it is always the same.

#first, recalculate theta using the same parameters, but 1,861 (N)
#calculate the time of the event: divide years by generation time and then by 4N
#calculate the growth parameter and run the command (very similar to the previous example)

#use 10000 replicates and 50 chromosomes

ms nsam nreps -t theta -eN time growth_parameter|sample_stats|cut -f 2,4,6  > example3.stats.out

################################################################################################
